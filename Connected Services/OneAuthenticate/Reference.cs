//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OneAuthenticate
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://OneSystems.is/OneAuthenticate", ConfigurationName="OneAuthenticate.AuthenticateSoap")]
    public interface AuthenticateSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://OneSystems.is/OneAuthenticate/GetAuthenticationToken", ReplyAction="*")]
        OneAuthenticate.GetAuthenticationTokenResponse GetAuthenticationToken(OneAuthenticate.GetAuthenticationTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://OneSystems.is/OneAuthenticate/GetAuthenticationToken", ReplyAction="*")]
        System.Threading.Tasks.Task<OneAuthenticate.GetAuthenticationTokenResponse> GetAuthenticationTokenAsync(OneAuthenticate.GetAuthenticationTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://OneSystems.is/OneAuthenticate/CreateApiKey", ReplyAction="*")]
        OneAuthenticate.CreateApiKeyResponse CreateApiKey(OneAuthenticate.CreateApiKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://OneSystems.is/OneAuthenticate/CreateApiKey", ReplyAction="*")]
        System.Threading.Tasks.Task<OneAuthenticate.CreateApiKeyResponse> CreateApiKeyAsync(OneAuthenticate.CreateApiKeyRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAuthenticationTokenRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAuthenticationToken", Namespace="http://OneSystems.is/OneAuthenticate", Order=0)]
        public OneAuthenticate.GetAuthenticationTokenRequestBody Body;
        
        public GetAuthenticationTokenRequest()
        {
        }
        
        public GetAuthenticationTokenRequest(OneAuthenticate.GetAuthenticationTokenRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://OneSystems.is/OneAuthenticate")]
    public partial class GetAuthenticationTokenRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string _apiKey;
        
        public GetAuthenticationTokenRequestBody()
        {
        }
        
        public GetAuthenticationTokenRequestBody(string _apiKey)
        {
            this._apiKey = _apiKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAuthenticationTokenResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAuthenticationTokenResponse", Namespace="http://OneSystems.is/OneAuthenticate", Order=0)]
        public OneAuthenticate.GetAuthenticationTokenResponseBody Body;
        
        public GetAuthenticationTokenResponse()
        {
        }
        
        public GetAuthenticationTokenResponse(OneAuthenticate.GetAuthenticationTokenResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://OneSystems.is/OneAuthenticate")]
    public partial class GetAuthenticationTokenResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetAuthenticationTokenResult;
        
        public GetAuthenticationTokenResponseBody()
        {
        }
        
        public GetAuthenticationTokenResponseBody(string GetAuthenticationTokenResult)
        {
            this.GetAuthenticationTokenResult = GetAuthenticationTokenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateApiKeyRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateApiKey", Namespace="http://OneSystems.is/OneAuthenticate", Order=0)]
        public OneAuthenticate.CreateApiKeyRequestBody Body;
        
        public CreateApiKeyRequest()
        {
        }
        
        public CreateApiKeyRequest(OneAuthenticate.CreateApiKeyRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://OneSystems.is/OneAuthenticate")]
    public partial class CreateApiKeyRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string _username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string _password;
        
        public CreateApiKeyRequestBody()
        {
        }
        
        public CreateApiKeyRequestBody(string _username, string _password)
        {
            this._username = _username;
            this._password = _password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateApiKeyResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateApiKeyResponse", Namespace="http://OneSystems.is/OneAuthenticate", Order=0)]
        public OneAuthenticate.CreateApiKeyResponseBody Body;
        
        public CreateApiKeyResponse()
        {
        }
        
        public CreateApiKeyResponse(OneAuthenticate.CreateApiKeyResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://OneSystems.is/OneAuthenticate")]
    public partial class CreateApiKeyResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string CreateApiKeyResult;
        
        public CreateApiKeyResponseBody()
        {
        }
        
        public CreateApiKeyResponseBody(string CreateApiKeyResult)
        {
            this.CreateApiKeyResult = CreateApiKeyResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface AuthenticateSoapChannel : OneAuthenticate.AuthenticateSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class AuthenticateSoapClient : System.ServiceModel.ClientBase<OneAuthenticate.AuthenticateSoap>, OneAuthenticate.AuthenticateSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AuthenticateSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(AuthenticateSoapClient.GetBindingForEndpoint(endpointConfiguration), AuthenticateSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenticateSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AuthenticateSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenticateSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AuthenticateSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenticateSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public OneAuthenticate.GetAuthenticationTokenResponse GetAuthenticationToken(OneAuthenticate.GetAuthenticationTokenRequest request)
        {
            return base.Channel.GetAuthenticationToken(request);
        }
        
        public System.Threading.Tasks.Task<OneAuthenticate.GetAuthenticationTokenResponse> GetAuthenticationTokenAsync(OneAuthenticate.GetAuthenticationTokenRequest request)
        {
            return base.Channel.GetAuthenticationTokenAsync(request);
        }
        
        public OneAuthenticate.CreateApiKeyResponse CreateApiKey(OneAuthenticate.CreateApiKeyRequest request)
        {
            return base.Channel.CreateApiKey(request);
        }
        
        public System.Threading.Tasks.Task<OneAuthenticate.CreateApiKeyResponse> CreateApiKeyAsync(OneAuthenticate.CreateApiKeyRequest request)
        {
            return base.Channel.CreateApiKeyAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.AuthenticateSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.AuthenticateSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.AuthenticateSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://one.kopavogur.is/profun/oneauthentication/authenticate.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.AuthenticateSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://one.kopavogur.is/profun/oneauthentication/authenticate.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            AuthenticateSoap,
            
            AuthenticateSoap12,
        }
    }
}
